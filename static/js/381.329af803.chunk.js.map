{"version":3,"file":"static/js/381.329af803.chunk.js","mappings":"4LAEaA,EAAS,WACpB,OACE,iCACE,SAAC,KAAD,CACEC,OAAO,MACPC,MAAM,MACNC,MAAM,UACNC,UAAU,eACVC,OAAO,OACPC,aAAc,CAAEC,QAAS,OAAQC,eAAgB,UACjDC,SAAS,KAEX,cACEC,MAAO,CACLC,WAAY,MACZC,SAAU,OACVL,QAAS,OACTC,eAAgB,SAChBK,UAAW,QANf,SAQC,iBAKN,C,sJC1BD,EAA0B,yBAA1B,EAA+D,2B,SCkD/D,EA5CgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,qFACnBJ,GAAa,GADM,cAGjBF,EAHiB,UAGAO,EAAAA,EAAAA,IAAWJ,GAHX,kFAKjBK,QAAQC,IAAR,MALiB,yBAOjBP,GAAa,GAPI,4EAAH,qDAUlBI,GACD,GAAE,CAACH,IAImB,IAAnBJ,EAAQW,QAER,cAAGC,UAAWC,EAAd,SAA6B,gDAK/B,gCACGX,IAAa,SAACjB,EAAA,EAAD,IACbe,IACC,eAAIY,UAAWC,EAAf,SACGb,EAAQc,KAAI,SAAAC,GAAM,OACjB,2BACE,0BAAI,WAASA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,QAU5B,C,mMC/CKC,EAAU,mCACVC,EAAW,gCAEJC,EAAiB,mCAAG,WAAMC,GAAN,yFACRC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBD,EADpB,gCACmDG,IAF3C,uBACvBE,EADuB,EACvBA,KADuB,kBAIxBA,EAAKC,SAJmB,2CAAH,sDAOjBC,EAAgB,mCAAG,WAAMC,GAAN,yFACPJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcD,EADd,kBAC+BQ,EAD/B,+CADO,uBACtBH,EADsB,EACtBA,KADsB,kBAIvBA,EAAKC,SAJkB,2CAAH,sDAOhBG,EAAe,mCAAG,WAAMxB,GAAN,yFACNmB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDhB,EADC,oBACkBe,EADlB,oBADM,uBACrBK,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOfK,EAAO,mCAAG,WAAMzB,GAAN,yFACEmB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAhB,EADA,4BAC2Be,EAD3B,oBADF,uBACbK,EADa,EACbA,KADa,kBAIdA,EAAKM,MAJS,2CAAH,sDAOPtB,EAAU,mCAAG,WAAMJ,GAAN,yFACDmB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAhB,EADA,4BAC2Be,EAD3B,2BADC,uBAChBK,EADgB,EAChBA,KADgB,kBAKjBA,EAAKC,SALY,2CAAH,qD","sources":["components/Loader/Loader.jsx","webpack://react-homework-template/./src/pages/MovieDetails/Reviews/Reviews.module.css?48d1","pages/MovieDetails/Reviews/Reviews.jsx","utils/moviesAPI.js"],"sourcesContent":["import { Grid } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <>\n      <Grid\n        height=\"150\"\n        width=\"150\"\n        color=\"#2a363b\"\n        ariaLabel=\"grid-loading\"\n        radius=\"12.5\"\n        wrapperStyle={{ display: 'flex', justifyContent: 'center' }}\n        visible={true}\n      />\n      <p\n        style={{\n          fontWeight: '600',\n          fontSize: '30px',\n          display: 'flex',\n          justifyContent: 'center',\n          marginTop: '20px',\n        }}\n      >\n        Loading...\n      </p>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"reviews\":\"Reviews_reviews__N+PvS\",\"noReviews\":\"Reviews_noReviews__kdd9b\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getReviews } from 'utils/moviesAPI';\nimport { Loader } from 'components/Loader/Loader';\nimport css from './Reviews.module.css';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      setIsLoading(true);\n      try {\n        setReviews(await getReviews(movieId));\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  // console.log(reviews);\n\n  if (reviews.length === 0) {\n    return (\n      <p className={css.noReviews}>We don't have any review for this movie...</p>\n    );\n  }\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {reviews && (\n        <ul className={css.reviews}>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <h3>Author: {review.author}</h3>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'b2e2d2c8145624ba6f52acc7f816fd89';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async page => {\n  const { data } = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n  return data.results;\n};\n\nexport const getMovieBySearch = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&include_adult=false&language=en-US&page=1`\n  );\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data.results;\n};\n"],"names":["Loader","height","width","color","ariaLabel","radius","wrapperStyle","display","justifyContent","visible","style","fontWeight","fontSize","marginTop","useState","reviews","setReviews","isLoading","setIsLoading","movieId","useParams","useEffect","fetchReviews","getReviews","console","log","length","className","css","map","review","author","content","id","API_KEY","BASE_URL","getTrendingMovies","page","axios","data","results","getMovieBySearch","query","getMovieDetails","getCast","cast"],"sourceRoot":""}