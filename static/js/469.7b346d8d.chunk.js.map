{"version":3,"file":"static/js/469.7b346d8d.chunk.js","mappings":"4LAEaA,EAAS,WACpB,OACE,iCACE,SAAC,KAAD,CACEC,OAAO,MACPC,MAAM,MACNC,MAAM,UACNC,UAAU,eACVC,OAAO,OACPC,aAAc,CAAEC,QAAS,OAAQC,eAAgB,UACjDC,SAAS,KAEX,cACEC,MAAO,CACLC,WAAY,MACZC,SAAU,OACVL,QAAS,OACTC,eAAgB,SAChBK,UAAW,QANf,SAQC,iBAKN,C,gKC1BD,EAAuB,mB,SCsDvB,EA/Ca,WACX,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,qFAChBJ,GAAa,GADG,cAGdF,EAHc,UAGAO,EAAAA,EAAAA,IAAQJ,GAHR,kFAKdK,QAAQC,IAAR,MALc,yBAOdP,GAAa,GAPC,4EAAH,qDAUfI,GACD,GAAE,CAACH,KAKF,gCACGF,IAAa,SAACjB,EAAA,EAAD,IACbe,IACC,eAAIW,UAAWC,EAAf,SACGZ,EAAKa,KAAI,SAAAC,GAAK,OACb,2BACE,gBACEC,IACED,EAAME,aAAN,UACOC,EAAAA,GADP,OACsBH,EAAME,cACxBE,EAAAA,EAENC,IAAKL,EAAMM,QAEb,wBAAKN,EAAMM,QACX,yBAAG,cAAYN,EAAMO,eAVdP,EAAMQ,GADF,QAkBxB,C,8ECrDM,IAAML,EAAe,kCACfC,EACX,iH,mMCAIK,EAAU,mCACVC,EAAW,gCAEJC,EAAiB,mCAAG,WAAMC,GAAN,yFACRC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBD,EADpB,gCACmDG,IAF3C,uBACvBE,EADuB,EACvBA,KADuB,kBAIxBA,EAAKC,SAJmB,2CAAH,sDAOjBC,EAAgB,mCAAG,WAAMC,GAAN,yFACPJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcD,EADd,kBAC+BQ,EAD/B,+CADO,uBACtBH,EADsB,EACtBA,KADsB,kBAIvBA,EAAKC,SAJkB,2CAAH,sDAOhBG,EAAe,mCAAG,WAAM5B,GAAN,yFACNuB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDpB,EADC,oBACkBmB,EADlB,oBADM,uBACrBK,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOfpB,EAAO,mCAAG,WAAMJ,GAAN,yFACEuB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACApB,EADA,4BAC2BmB,EAD3B,oBADF,uBACbK,EADa,EACbA,KADa,kBAIdA,EAAK5B,MAJS,2CAAH,sDAOPiC,EAAU,mCAAG,WAAM7B,GAAN,yFACDuB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACApB,EADA,4BAC2BmB,EAD3B,2BADC,uBAChBK,EADgB,EAChBA,KADgB,kBAKjBA,EAAKC,SALY,2CAAH,qD","sources":["components/Loader/Loader.jsx","webpack://react-homework-template/./src/pages/MovieDetails/Cast/Cast.module.css?fa93","pages/MovieDetails/Cast/Cast.jsx","utils/constants.js","utils/moviesAPI.js"],"sourcesContent":["import { Grid } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <>\n      <Grid\n        height=\"150\"\n        width=\"150\"\n        color=\"#2a363b\"\n        ariaLabel=\"grid-loading\"\n        radius=\"12.5\"\n        wrapperStyle={{ display: 'flex', justifyContent: 'center' }}\n        visible={true}\n      />\n      <p\n        style={{\n          fontWeight: '600',\n          fontSize: '30px',\n          display: 'flex',\n          justifyContent: 'center',\n          marginTop: '20px',\n        }}\n      >\n        Loading...\n      </p>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cast\":\"Cast_cast__2k5cC\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getCast } from 'utils/moviesAPI';\nimport { BASE_IMG_URL, DEFAULT_IMG_URL } from 'utils/constants';\nimport { Loader } from 'components/Loader/Loader';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      setIsLoading(true);\n      try {\n        setCast(await getCast(movieId));\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  // console.log(cast);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {cast && (\n        <ul className={css.cast}>\n          {cast.map(actor => (\n            <li key={actor.id}>\n              <img\n                src={\n                  actor.profile_path\n                    ? `${BASE_IMG_URL}${actor.profile_path}`\n                    : DEFAULT_IMG_URL\n                }\n                alt={actor.name}\n              />\n              <h3>{actor.name}</h3>\n              <p>Character: {actor.character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","export const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\nexport const DEFAULT_IMG_URL =\n  'https://images.pexels.com/photos/6665914/pexels-photo-6665914.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1';\n","import axios from 'axios';\n\nconst API_KEY = 'b2e2d2c8145624ba6f52acc7f816fd89';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async page => {\n  const { data } = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n  return data.results;\n};\n\nexport const getMovieBySearch = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&include_adult=false&language=en-US&page=1`\n  );\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data.results;\n};\n"],"names":["Loader","height","width","color","ariaLabel","radius","wrapperStyle","display","justifyContent","visible","style","fontWeight","fontSize","marginTop","useState","cast","setCast","isLoading","setIsLoading","movieId","useParams","useEffect","fetchCast","getCast","console","log","className","css","map","actor","src","profile_path","BASE_IMG_URL","DEFAULT_IMG_URL","alt","name","character","id","API_KEY","BASE_URL","getTrendingMovies","page","axios","data","results","getMovieBySearch","query","getMovieDetails","getReviews"],"sourceRoot":""}